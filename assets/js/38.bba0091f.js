(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{227:function(t,a,s){"use strict";s.r(a);var n=s(0),_=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# 此页面贡献者：年轻的小铲")]),t._v("\n")])])]),s("h2",{attrs:{id:"计算机网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络","aria-hidden":"true"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),s("p",[t._v("计算机网络，简单的说，就是连接两台或多台计算机进行通信的系统。计算机最初只是单机状态，随发展实现了通信。进行通信时，需要相应的协议。举例：男女盖佬，如果会说同一种语言(协议)，他们就能够沟通(通信)。互联网就是互联全世界的计算机网络。互联网的协议族就是TCP/IP。")]),t._v(" "),s("p",[t._v("先建立一个TCP/IP的伪印象："),s("code",[t._v("TCP/IP协议 !== TCP协议/IP协议")]),t._v("。IP/ICMP; TCP/UDP; TELNET/FTP; HTTP等，都属于"),s("code",[t._v("TCP/IP协议")]),t._v("。所以TCP/IP是泛指这些协议。TCP/IP分层模型如下，常被视为是简化的七层OSI模型：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    -----------------------\n  7|   应用层   |           |\n\n  6|   表示层   |  应 用 层  |\n\n  5|   会话层   |           |\n    -----------------------\n  4|   传输层   |  传 输 层  |\n    -----------------------\n  3|   网络层   |  网 络 层  |\n    -----------------------\n  2|  数据链路层 \n               |  链 路 层  |\n  1|   物理层\n    -----------------------\n       [OSI]     [TCP/IP]\n")])])]),s("p",[t._v("每个分层都会对需要发送的数据加上一个首部，形成数据包。那么两台计算机通信，可以视作这样一个过程：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  *[ 数据    首部 ]\n    --------====\n\n              主机A                                        主机B\n   ============================                ============================\n     Application Layer: -=                           -= :Application Layer\n                        ↓                             ↑\n       Transport Layer: --=                         --= :Transport Layer\n                        ↓                             ↑\n         Network Layer: ---=                       ---= :Network Layer\n                        ↓           _______           ↑\n            Link Layer: ----=      |_______|      ----= :Link Layer\n                        ↓__________↑       ↓__________↑\n\n    \n     *[首部[]：包含该层必要的信息，比如发送的目标地址及协议相关信息。]\n     *[数据^^：在下一层的角度上看，从上一层接收到的数据包，是本层的数据。]\n\n   数 据 + [ TCP包首部 ]\n   ^^^^^  \n   数 据 +   TCP包首部   + [ IP包首部 ]\n   ^^^^^^^^^^^^^^^^^^^^\n   数 据 +   TCP包首部   +   IP包首部   + [ 以太网包首部 ]\n   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n")])])]),s("h2",{attrs:{id:"tcp协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP协议")]),t._v(" "),s("p",[t._v("首先，在协议栈中， "),s("code",[t._v("传输层")]),t._v(" 位于 "),s("code",[t._v("网络层")]),t._v(" 之上。"),s("code",[t._v("传输层")]),t._v("协议为"),s("strong",[t._v("不同主机上运行的进程")]),t._v("提供逻辑通信；"),s("code",[t._v("网络层")]),t._v("协议为"),s("strong",[t._v("不同主机")]),t._v("提供逻辑通信。"),s("strong",[t._v("不同主机上运行的进程")]),t._v("是指什么？比如一台计算机可以同时运行多个程序：接受www服务的web牛奶器、电邮客户端、ssh客户端等。传输层协议利用"),s("strong",[t._v("端口号")]),t._v("识别本机正在通信的应用程序，并准确地将数据传输。")]),t._v(" "),s("p",[t._v("TCP/IP分层模型的传输层的两个代表性协议是："),s("code",[t._v("TCP")]),t._v(" "),s("code",[t._v("UDP")]),t._v("。TCP是一种"),s("strong",[t._v("面向有连接 connection-based")]),t._v("的传输层协议。面向有连接是指，在数据通信前，先做好通信两端之间的准备工作。这个准备工作，也就是指：建立一个TCP连接，需要发送3个包，这个过程也称作三次握手。")]),t._v(" "),s("h3",{attrs:{id:"三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次握手","aria-hidden":"true"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# [ACK] TCP中，当发送端数据到达接收端时，接收端返回一个[已收到消息]的通知。这个消息叫做确认应答[ACK]\n# [SYN] SYN是建立连接时的握手信号，TCP中发送第一个SYN包的为客户端，接收的为服务端\n\n  假设有客户端A，服务端B。我们要建立可靠的数据传输！\n      SYN(=j)       // SYN: A请求建立连接\n  A ----------\x3e B\n                |\n     ACK(=j+1)  |   // ACK: B确认应答A的SYN\n     SYN(=k)    |   // SYN: B发送一个SYN\n  A <-----------\n  |\n  |  ACK(=k+1)\n   -----------\x3e B   // ACK: A确认应答B的包包\n")])])]),s("h3",{attrs:{id:"滑动窗口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口","aria-hidden":"true"}},[t._v("#")]),t._v(" 滑动窗口")]),t._v(" "),s("p",[t._v("TCP 为了实现可靠传输，当然要知道网络实际的数据处理带宽或速度，否则 => 网络拥塞，导致丢包。TCP 引入了一些技术来做网络流量控制，其中一个是"),s("strong",[t._v("滑动窗口")]),t._v("。")]),t._v(" "),s("p",[t._v("TCP 以段(段的大小由MSS决定)为单位发送数据，如图，我们每发一个段进行一次应答处理：这种传输方式 => 包的往返时间越长，通信性能越低。\n"),s("img",{attrs:{src:"http://wx1.sinaimg.cn/mw690/6735723dgy1ffswiewu9aj20ba09caam.jpg",alt:"pic1"}})]),t._v(" "),s("p",[t._v("此时，我们可以利用窗口控制提高速度。没错的，并行处理的。如图：\n"),s("img",{attrs:{src:"http://wx2.sinaimg.cn/mw690/6735723dgy1ffswig339gj20au06wdh7.jpg",alt:"pic2"}})]),t._v(" "),s("p",[t._v("这个机制使用了大量的"),s("strong",[t._v("缓冲区")]),t._v("，此时确认应答以"),s("strong",[t._v("更大的单位")]),t._v("进行 => 对多个段同时进行确认应答。"),s("strong",[t._v("更大的单位")]),t._v("这里就是指"),s("strong",[t._v("窗口")]),t._v("。窗口大小 => 无需等待确认应答，可以继续发送数据的最大值。窗口大小是由接收端的主机决定的。TCP 首部专门有个字段用来通知窗口大小。接收端将自己可以接受的缓冲区大小，放入这个字段，通知给发送端。"),s("strong",[t._v("发送端根据接收端主机的窗口大小通知，进行流量控制。防止发送端一次发送过大数据导致接收端无法处理")]),t._v("。\n"),s("img",{attrs:{src:"http://wx3.sinaimg.cn/mw690/6735723dgy1ffvmtj4hebj20ic0c4n1o.jpg",alt:"pic3"}})]),t._v(" "),s("p",[t._v("看上图，大概就是长这样的东西，长条黑黑的就是要发的数据，一小格一小格就是段，还有白白那一块是窗口。窗口外的左边，是已经收到确认应答的数据段，窗口外的右边，就是窗口外边的呗。窗口里面的，是发了还没收到ack的|还没有发出的。2001数据的ACK到达主机A后，主机A的小窗口就往前挪一格，超萌的。（窗口还有好多内容，我大概过了一遍教材了，但是自己不想打字了，你们好好看书吧，再见。")]),t._v(" "),s("h2",{attrs:{id:"推荐书籍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推荐书籍","aria-hidden":"true"}},[t._v("#")]),t._v(" 推荐书籍")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token number"}},[t._v("1.")]),t._v(" 竹下隆史"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 村山公保"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 荒井透"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 苅田幸雄"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 图解"),s("span",{attrs:{class:"token constant"}},[t._v("TCP")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),s("span",{attrs:{class:"token constant"}},[t._v("IP")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("第"),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("版"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 人民邮电出版社"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2013.")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("2.")]),t._v(" Lawrence Berkeley"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{attrs:{class:"token constant"}},[t._v("TCP")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),s("span",{attrs:{class:"token constant"}},[t._v("IP")]),t._v("详解卷"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("：协议"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 机械工业出版社"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2000.")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("3.")]),t._v(" James "),s("span",{attrs:{class:"token constant"}},[t._v("F")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Kurose"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Keith "),s("span",{attrs:{class:"token constant"}},[t._v("W")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Ross"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 计算机网络"),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token function"}},[t._v("自顶向下方法")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("原书第"),s("span",{attrs:{class:"token number"}},[t._v("6")]),t._v("版"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 机械工业出版社"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2014.")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("4.")]),t._v(" 谢希仁"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("计算机网络")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("第"),s("span",{attrs:{class:"token number"}},[t._v("6")]),t._v("版"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 电子工业出版社"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2013.")]),t._v("\n")])])])])}],!1,null,null,null);a.default=_.exports}}]);