(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{202:function(e,_,t){"use strict";t.r(_);var v=t(0),i=Object(v.a)({},function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("div",{staticClass:"content"},[e._m(0),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),t("p",[e._v("相同模块的第二次加载都一律采用缓存优先的方式。不需要再次经历以上 3 个步骤")]),e._v(" "),e._m(9),e._v(" "),t("p",[e._v("深入浅出Node.js")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/05/require.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("require() 源码解读"),t("OutboundLink")],1)])])},[function(){var e=this.$createElement,_=this._self._c||e;return _("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{attrs:{class:"token comment"}},[this._v("# 此页面贡献者：年轻的铲屎")]),this._v("\n")])])])},function(){var e=this.$createElement,_=this._self._c||e;return _("h2",{attrs:{id:"commonjs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commonjs","aria-hidden":"true"}},[this._v("#")]),this._v(" CommonJS")])},function(){var e=this.$createElement,_=this._self._c||e;return _("p",[_("code",[this._v("CommonJS")]),this._v(" 规范，为 "),_("code",[this._v("JavaScript")]),this._v(" 制定了一个美好的愿景——希望 "),_("code",[this._v("JavaScript")]),this._v(" 能够在任何地方运行。")])},function(){var e=this.$createElement,_=this._self._c||e;return _("h3",{attrs:{id:"在-node-中，模块分为-2-类："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在-node-中，模块分为-2-类：","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 "),_("code",[this._v("Node")]),this._v(" 中，模块分为 2 类：")])},function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ol",[t("li",[t("p",[t("code",[e._v("Node")]),e._v(" 提供的模块，称为核心模块")]),e._v(" "),t("p",[e._v("核心模块在 "),t("code",[e._v("Node")]),e._v(" 源代码的编译过程中已经编译为二进制代码。在 "),t("code",[e._v("Node")]),e._v(" 进程启动时，部分核心模块就直接被加载进内存中。")])]),e._v(" "),t("li",[t("p",[e._v("用户编写的模块，称为文件模块")]),e._v(" "),t("p",[e._v("在运行中动态加载。")])])])},function(){var e=this.$createElement,_=this._self._c||e;return _("h3",{attrs:{id:"commonjs-的模块规范，主要分为-3-部分："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-的模块规范，主要分为-3-部分：","aria-hidden":"true"}},[this._v("#")]),this._v(" "),_("code",[this._v("CommonJS")]),this._v(" 的模块规范，主要分为 3 部分：")])},function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ol",[t("li",[t("p",[e._v("模块定义")]),e._v(" "),t("p",[e._v("在 "),t("code",[e._v("Node")]),e._v(" 中，一个文件就是一个 "),t("code",[e._v("module")]),e._v(" 对象，该对象含有 "),t("code",[e._v("exports")]),e._v(" 属性。通过 "),t("code",[e._v("exports")]),e._v(" 导出当前模块的方法或变量。")])]),e._v(" "),t("li",[t("p",[e._v("模块引用")]),e._v(" "),t("p",[e._v("通过 "),t("code",[e._v("require()")]),e._v(" 方法接受 "),t("code",[e._v("模块标识")]),e._v(" 来引入模块的 "),t("code",[e._v("API")]),e._v(" 到当前上下文。")])]),e._v(" "),t("li",[t("p",[e._v("模块标识")]),e._v(" "),t("p",[e._v("即传递给  "),t("code",[e._v("require()")]),e._v(" 的参数。小骆峰命名字符串。可以没有文件后缀名。主要分为 4 类：")]),e._v(" "),t("ul",[t("li",[e._v("核心模块 e.g. "),t("code",[e._v("http")]),e._v(" "),t("code",[e._v("fs")]),e._v(" "),t("code",[e._v("path")])]),e._v(" "),t("li",[e._v("以 "),t("code",[e._v(".")]),e._v(" 或 "),t("code",[e._v("..")]),e._v(" 开始的相对路径文件模块")]),e._v(" "),t("li",[e._v("以 "),t("code",[e._v("/")]),e._v(" 开始的绝对路径文件模块")]),e._v(" "),t("li",[e._v("非路径形式的文件模块，如自定义的 "),t("code",[e._v("connect")]),e._v(" 模块")])])])])},function(){var e=this.$createElement,_=this._self._c||e;return _("h3",{attrs:{id:"node-通过-require-引入模块，需要经历-3-个步骤："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node-通过-require-引入模块，需要经历-3-个步骤：","aria-hidden":"true"}},[this._v("#")]),this._v(" "),_("code",[this._v("Node")]),this._v(" 通过 "),_("code",[this._v("require()")]),this._v(" 引入模块，需要经历 3 个步骤：")])},function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ol",[t("li",[t("p",[e._v("路径分析")]),e._v(" "),t("ul",[t("li",[e._v("查找优先级 & 加载速度：核心模块 > 文件模块 > 自定义模块")])])]),e._v(" "),t("li",[t("p",[e._v("文件定位")]),e._v(" "),t("ul",[t("li",[e._v("文件扩展名分析，按以下次序补足扩展名： .js > .json > .node")]),e._v(" "),t("li",[e._v("上一步扩展名分析没有查找到对应文件，则模块标识为目录，将目录视为包进行分析（自定义模块常见场景）：\n"),t("ul",[t("li",[e._v("查找目录下 "),t("code",[e._v("package.json")]),e._v(" 的 "),t("code",[e._v("main")]),e._v(" 字段，进行文件定位")]),e._v(" "),t("li",[e._v("如果上一步失败，则默认 "),t("code",[e._v("index")]),e._v(" 为文件名，并为其匹配查找扩展名")]),e._v(" "),t("li",[e._v("如果上一步失败 again ，自定义模块进入下一个模块路径进行查找")]),e._v(" "),t("li",[e._v("如果上一步失败 again ，抛出查找失败异常")])])])])]),e._v(" "),t("li",[t("p",[e._v("编译执行")]),e._v(" "),t("ul",[t("li",[e._v("定位到具体文件后， "),t("code",[e._v("Node")]),e._v(" 新建模块对象，根据路径载入并编译。对不同文件扩展名，载入方法不同。如 "),t("code",[e._v(".js")]),e._v(" 文件，通过 "),t("code",[e._v("fs")]),e._v(" 模块同步读取文件后编译执行。成功编译的模块都会将其文件路径作为所以缓存在模块对象中。")])])])])},function(){var e=this.$createElement,_=this._self._c||e;return _("h2",{attrs:{id:"学习资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#学习资料","aria-hidden":"true"}},[this._v("#")]),this._v(" 学习资料")])}],!1,null,null,null);_.default=i.exports}}]);